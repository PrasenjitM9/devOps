
apiVersion: v1
kind: Secret
metadata:
  name: myfourthsecret
  type: Opaque
stringData:
  username: admin
  password: super_password

> kubectl apply -f credentials.yaml
secret/myfourthsecret created

========================================================================================================================================
This is because Kubernetes only allows already-base64-encoded Secret values when using the data field. So, in order to comply with that, 
you’d need to first encode your desired values using base64 binary, like this:

> echo -n 'admin' | base64
YWRtaW4=
> echo -n 'super_password' | base64
c3VwZXJfcGFzc3dvcmQ=

=============================================================================================

and only then you can use those encoded values together with the data field in the YAML file:

apiVersion: v1
kind: Secret
metadata:
  name: myfifthsecret
type: Opaque
data:
  username: YWRtaW4=
  password: c3VwZXJfcGFzc3dvcmQ=

> kubectl apply -f credentials2.yaml
secret/myfifthsecret created

Note: if someone was looking at your screen while you had the YAML file open, 
they wouldn’t be able to see the sensitive data in plain text. However, 
keep in mind that base64 is only a very basic encoding mechanism. It’s not encryption,
